Service: BagagePlayer include Player

Obersators:
getActiceWeapon : [BagagePlayer]-> Option [Weapon]
getWeapon : [BagagePlayer]*int -> [Weapon]
 require 
getnbWeapon: [BagagePlayer]->int
getItem :[BagagePlayer]*int-> [Item]
    require 
getnbItem :[BagagePlayer]->int
getCapacity : [BagagePlayer]-> int

Constructors:
 // utilise le constructor de init Player
 init(//init() de player/))
 post:  getWeapon(init()))->none ou [main]
 post:  getItems(init()).getnbitems()==0

 Operators:
 addItem :[BagagePlayer]*[Item]->[BagagePlayer]
 addItem(bp,i) require getCapacity(bp)<getnbItem(bp)

addWeapon :[BagagePlayer]*[Weapon]->[BagagePlayer]
 addWeapon(bp,w) require getCapacity(bp)<getnbWeapon(bp)

removeItem :[BagagePlayer]*int->[BagagePlayer]*[Item]
 removeItem (bp,i) require i>0 && i<getnbItem(bp)

 removeWeapon :[BagagePlayer]*int->[BagagePlayer]*[Weapon]
 removeWeapon (bp,i) require i=!0 && i>0 && i<getnbWeapon(bp)

 putactiveWeapon: [BagagePlayer]*int->[BagagePlayer]
    require putactiveWeapon(bp,i) require i>=0 && i<getnbWeapon


 Obersator:
  [invariant]:
 getnbItem+getnbWeapon<getCapacity
 getName(getWeapon(bp,0))=poing
 
 [addItem]:
    getnbItem(bp)=getnbItem(addItem(bp,it))+1
    && forall i:int in [0,getnbItem(bp)] getItem(bp,i)=getItem(addItem(bp,it),i)
    && getItem(addItem(bp,it),i)=it
    && getActiceWeapon(bp)=getActiceWeapon(addItem(bp,i))
    && forall i:int in 0>getnbWeapon(bp) getWeapon(bp,i)=getWeapon(addItem(bp,it),i)


[addWeapon] :
    getnbWeapon(bp)=getnbWeapon(addWeapon(bp,it))+1
    && forall i:int in [0,getnbWeapon(bp)] getWeapon(bp,i)=getWeapon(addWeapon(bp,it),i)
    && getItem(addWeapon(bp,it),i)=it
    && getActiceWeapon(bp)=getActiceWeapon(addWeapon(bp,i))
    &&  forall i:int in  [0,getnbItem(bp)] getItem(bp,i)=getItem(addWeapon(bp,it),i)

[removeItem] : 
    getnbItem(bp)=getnbItem(removeItem(bp,i))-1
    && forall i:int in [0,i[ getItem(bp,i) =getItem(removeItem(bp,it),i)
    && forall i:int in ]i,getnbItem(bp)-1] getItem(bp,i)=getItem(removeItem(bp,it),i-1)
    && removeItem(bp,i)= getItem(it,i)
    && getActiceWeapon(bp)=getActiceWeapon(removeItem(bp,i))
    && forall i:int in 0>getnbWeapon(bp) getWeapon(bp,i)=getWeapon(removeItem(bp,it),i)



[removeWeapon] : 
    getnbWeapon(bp)=getnbWeapon(removeItem(bp,i))-1
    && forall i:int in [0,i[ getWeapon(sbp,i)=getWeapon(removeWeapon(bp,it),i)
    && forall i:int in ]i,getnbWeapon(bp)-1] getWeapon(bp,i)=getWeapon(removeWeapon(bp,i),i-1)
    && removeWeapon(bp,i)= getWeapon(it,i)
    && getActiceWeapon(bp)=getWeapon(bp,i) implies getActiceWeapon(removeWeapon(bp,i))=getWeapon(bp,0)
    && getActiceWeapon(bp)!=getWeapon(bp,i) implies getActiceWeapon(removeWeapon(bp,i))=getActiveWeapon(bp)
    
    && forall i:int in 0>getnbItem(bp) getItem(bp,i)=getItem(putactiveWeapon(bp,it),i)



 [putactiveWeapon]:
    getActiceWeapon(putactiveWeapon(bp,i))=getWeapon(bp,i)
    && forall i:int in 0>getnbWeapon(bp) getWeapon(bp,i)=getWeapon(putactiveWeapon(bp,it),i)
    && forall i:int in 0>getnbItem(bp) getItem(bp,i)=getItem(putactiveWeapon(bp,it),i)


