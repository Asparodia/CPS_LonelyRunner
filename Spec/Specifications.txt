Service : Screen

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}

Observators:

getHeight : [Screen] -> int
getWidth : [Screen] -> int
getCellNature : [Screen]*int*int -> Cell
	pre : getCellNature(S,i,j) requires (i,j) in [0;getWidth(S)[ × [0;getHeight(S)[

Constructors : 

init : int*int -> Screen
	pre : init(h,w) requires h > 0 and w > 0

Operators :

dig : [Screen]*int*int -> [Screen]
	pre : dig(S,u,v) requires getCellNature(S,u,v) = PLT

fill: [Screen]*int*int -> [Screen]
	pre : fill(S,u,v) requires getCellNature(S,u,v) = HOL

Observations :

[Invariants]
	pas d'invariant

[init] : getHeight(init(h,w)) = h
	 getWidth(init(h,w)) = w
	 forall (x,y) in [0;getWidth(S)[ × [0;getHeight(S)[, getCellNature(init(h,w),x,y) = EMP

[dig] : forall (x,y) in [0;getWidth(S)[ × [0;getHeight(S)[, (x != u or y != v) implies getCellNature(Dig(S,u,v)),x,y) = getCellNature(S,x,y)

[fill] : forall (x,y) in [0;getWidth(S)[ × [0;getHeight(S)[, (x != u or y != v) implies getCellNature(Dig(S,u,v)),x,y) = getCellNature(S,x,y)

#############################################################################################################################################

Service : EditableScreen 
refine : Screen

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}

Observators:

isPlayable : [EditableScreen] -> bool

Constructors : 

(utilise le init de Screen)
init : int*int -> EditableScreen
	pre : init(h,w) requires h > 0 and w > 0

Operators :

setNature : [Screen]*int*int*Cell -> [EditableScreen]
	pre : setNature(S,x,y,c) requires (x,y) in [0;getWidth(S)[×[0;getHeight(S)

Observations :

[Invariants]
	isPlayable(S) min 
		forall (x,y) in [0;getWidth(ES)[×[0;getHeight(ES)[, getCellNature(ES,x,y) != HOL and forall x in [0;getWidth(ES)[, getCellNature(ES,x,0) = MTL 

[init] : getHeight(init(h,w)) == h
	 getWidth(init(h,w)) == w
	 forall (x,y) in [0;getWidth(ES)[ × [0;getHeight(ES)[, getCellNature(init(h,w),x,y) = EMP

[setNature] : getCellNature(setNature(ES,x,y,C)),x,y) = C 
	      forall (x,y) in [0;getWidth(ES)[ × [0;getHeight(ES)[, (x != u or y != v) implies getCellNature(setNature(ES,u,v,C)),x,y) = getCellNature(ES,x,y)

#############################################################################################################################################

Service : Environment
refine : Screen

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}, SetCharItem {Item + Character}

Observators:

getCellContent : [Environment]*int*int -> setCharItem
	pre : getCellContent(E,x,y) requires 0<=y < getHeight(S) and 0 <= x < getWidth(S)

Constructors : 

init : EditableScreen -> Environment


Observations :

[Invariants]
	forall (x,y) in [0;getWidth(E)[×[0;getHeight(E)[, 
		getCellNature(E,x,y) in [MTL,PLR] implies getCellContent(x,y) == {} 
	forall (x,y) in [0;getWidth(E)[×[0;getHeight(E)[, 
		exists Treasure t in getCellContent(E,x,y) implies (getCellNature(E,x,y) = EMP and getCellNature(E,x,y-1) in [PLT,MTL])

[init] : forall (x,y) in [0;getWidth(E)[×[0;getHeight(E)[, 
		getCellNature(init(S),x,y) = EditableScreen::getCellNature(S,x,y)

#############################################################################################################################################


Service : Character

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}, SetCharItem {Item + Character}

Observators:

const getEnvi : [Character] -> [Environment]

getHgt : [Character] -> int

getWdt : [Character] -> int

Constructors : 

init : [ScreenService]*int*int -> Character
	pre : init(S,x,y) requires Environment::getCellNature(S,x,y) = EMP 

Operators :

goLeft : [Character] -> [Character]

goRight : [Character] -> [Character]

goUp : [Character] -> [Character]

goDown : [Character] -> [Character]

Observations :


[Invariants]
	Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)) in {EMP,HOL,LAD,HDR} 
	exists Character x in Environment::getCellContent(getEnvi(C),getWdt(C),getHgt(C)) implies x = C

[goLeft] : getHgt(C) = 0 implies getHgt(goLeft(C)) = getHgt(C) and getWdt(goLeft(C)) = getWdt(C)
	   getHgt(C) > 0 and Environment::getCellNature(getEnvi(C),getWdt(C) - 1,getHgt(C)) in [MTL,PLT] 
			and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C) - 1) in [MTL,PLT,LAD] 
				implies getHgt(goLeft(C)) = getHgt(C) and getWdt(goLeft(C)) = getWdt(C)
	   Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)) not in [LAD,HDR]
			and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) not in [MTL,PLT,LAD] 
			and not exists Character c in Environment::getCellContent(getEnvi(C),getWdt(C),getHgt(C)-1)
				implies getHgt(goLeft(C)) = getHgt(C) - 1 and getWdt(goLeft(C)) = getWdt(C)
	   getHgt(C) > 0 and Environment::getCellNature(getEnvi(C),getWdt(C) - 1,getHgt(C)) not in [MTL,PLT] 
			and (Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)) in [LAD,HDR] 
				or Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) in [PLT,MTL,LAD]
				or exists Character c in  Environment::getCellContent(getEnvi(C),getWdt(C),getHgt(C)-1) )
			implies getHgt(goLeft(C)) = getHgt(C) and getWdt(goLeft(C)) = getWdt(C) - 1

[goRight] :getHgt(C) = Environment::getWidth(getEnvi(C)) - 1 implies getHgt(goRight(C)) = getHgt(C) and getWdt(goRight(C)) = getWdt(C)
	   getHgt(C) < Environment::getWidth(getEnvi(C)) - 1 and Environment::getCellNature(getEnvi(C),getWdt(C) + 1,getHgt(C)) in [MTL,PLT] 
			and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C) - 1) in [MTL,PLT,LAD] 
				implies getHgt(goRight(C)) = getHgt(C) and getWdt(goRight(C)) = getWdt(C)
	   Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)) not in [LAD,HDR]
			and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) not in [MTL,PLT,LAD] 
			and not exists Character c in Environment::getCellContent(getEnvi(C),getWdt(C),getHgt(C)-1)
				implies getHgt(goRight(C)) = getHgt(C) - 1 and getWdt(goRight(C)) = getWdt(C)
	   getHgt(C) < Environment::getWidth(getEnvi(C)) - 1 and Environment::getCellNature(getEnvi(C),getWdt(C) + 1,getHgt(C)) not in [MTL,PLT] 
			and (Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)) in [LAD,HDR] 
				or Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) in [PLT,MTL,LAD]
				or exists Character c in  Environment::getCellContent(getEnvi(C),getWdt(C),getHgt(C)-1) )
			implies getHgt(goRight(C)) = getHgt(C) and getWdt(goRight(C)) = getWdt(C) + 1


[goUp] : getHgt(C) = Environment::getHeight()-1 implies getHgt(goUp(C)) = getHgt(C) and getWdt(goUp(C)) = getWdt(C)
	 getHgt(C) < Environment::getHeight()-1 and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C) + 1) in [MTL,PLT,HDR] 
			and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) in [PLT,MTL,LAD]
				implies getWdt(C) = getWdt(goUp(C)) and getHgt(C) = getHgt(goUp(C))
	 Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)) not in [LAD,HDR]
			and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C) - 1) not in [MTL, PLT, LAD] 
			not exists Character c in Environment::getCellContent(getEnvi(C), getWdt(C), getHgt(C) - 1)
				implies getWdt(goUp(C)) = getWdt(C) and getHgt(goUp(C)) = getHgt(C) - 1
	 getHgt(C) < Environment::getHeight()-1 and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)) = LAD
			and Environment::CellNature(getEnvi(C), getWdt(C), getHgt(C) + 1) in [LAD,EMP] 
				implies getHgt(goUp(C)) = getHgt(C) + 1 and getWdt(goUp(C)) = getWdt(C)


[goDown]: getHgt(C) = 0 implies getHgt(goDown(C))=getHgt(C) and getWdt(goDown(C)) = getWdt(C)
	  getHgt(C) > 0 and Environment::getCellNature(getEnvi(C),getWdt(C),getHgt(C)-1) in [PLT,MTL]
				implies getWdt(C) = getWdt(goDown(C)) and getHgt(C) = getHgt(goDown(C))
	  Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)) not in [LAD,HDR]
			and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)-1) not in [PLT,MTL,LAD]
			and not exists Character c in Environment::getCellContent(getEnvi()@, getWdt(C), getHgt(C)-1))
				implies getWdt(goDown(C)) = getWdt(C) and getHgt(goDown(C)) = getHgt(C) - 1
	  getHgt(C) > 0 and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)) in [LAD,HDR,EMP,HOL]
			and Environment::getCellNature(getEnvi(C), getWdt(C), getHgt(C)-1) in [EMP,LAD,HDR,HOL]
				implies getHgt(goDown(C))=getHgt(C)-1 and getWdt(goDown(C)) = getWdt(C)

#############################################################################################################################################

Service : Player
include : Character

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}, SetCharItem {Item + Character}, Hole{ X, Y, Time}, Move {RIGHT,UP,DOWN,NEUTRAL,LEFT,DigL,DigR}

Observators:

getEngine : [Player] -> [Engine]

Constructors : 

init : [ScreenService]*int*int*[Engine] -> [Player]
	pre : init(S,x,y) requires Environment::getCellNature(S,x,y) = EMP 

Operators :

step : [Player] -> [Player]

digL : [Player] -> [Player]

digR : [Player] -> [Player]

doNeutral : [Player] -> [Player]

Observations :

[Invariants]
	Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)) in [EMP,HOL,LAD,HDR] 
	exists Player x in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)) implies x = P

[init] : P in Engine::getEnvironment(getEngine(P))::getCellContent(getEnvi(P),getWdt(P),getHgt(P))

[digL] : Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)) not in [LAD,HDR] 
			and Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P) - 1) not in [PLT,MTL,LAD]
			and not exists Character c in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)-1)
				implies getWdt(digL(P)) = getWdt(P) and getHgt(digL(P)) = getHgt(P) - 1
	 getWdt(P) > 0 and (Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)-1) in [MTL,PLT] or exist Character c in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)-1))
			and Environment::getCellNature(getEnvi(P),getWdt(P)-1,getHgt(P)-1) = PLT 
			and Environment::getCellNature(getEnvi(P),getWdt(P)-1,getHgt(P)) not in [PLT, MTL, LAD]
			and not exist Character c in Environment::getCellContent(getEnvi(P),getWdt(P)-1,getHgt(P) 
			and not exist Item i in Environment::getCellContent(getEnvi(P),getWdt(P)-1,getHgt(P)))
				implies  Environment::getCellNature(getEnvi(digL(P)),getWdt(digL(P))-1,getHgt(digL(P))-1) = HOL 
					and getWdt(digL(P)) = getWdt(P) and getHgt(digL(P)) = getHgt(P) 
					and Engine::getHoles(getEngine(digL(P))) =  Engine::getHoles(getEngine(P)) union Hole( getWdt(P)-1 ,getHgt(P)-1, 0)
					and forall (x,y) in [0;Environment::getWidth(getEnvi(P)[×[0;Environment::getHeight(getEnvi(P)[,  (x!=u or y!=v) 
						implies Environment::getCellNature(getEnvi(P),x,y) = getCellNature(getEnvi(digL(P)),x,y)

[digR] : Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)) not in [LAD,HDR] 
			and Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P) - 1) not in [PLT,MTL,LAD]
			and not exists Character c in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)-1)
				implies getWdt(digR(P)) = getWdt(P) and getHgt(digR(P)) = getHgt(P) - 1
	getWdt(P) < Environment::getWidth()-1 and (Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)-1) in [MTL,PLT] 
				or exist Character c in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)-1))
			and Environment::getCellNature(getEnvi(P),getWdt(P)+1,getHgt(P)-1) = PLT 
			and Environment::getCellNature(getEnvi(P),getWdt(P)-1,getHgt(P)) not in [PLT, MTL, LAD]
			and not exist Character c in Environment::getCellContent(getEnvi(P),getWdt(P)+1,getHgt(P)) 
			and not exist Item i in Environment::getCellContent(getEnvi(P),getWdt(P)+1,getHgt(P)))
				implies  Environment::getCellNature(getEnvi(digR(P)),getWdt(digR(P))+1,getHgt(digR(P))-1) = HOL 
					and getWdt(digR(P)) = getWdt(P) and getHgt(digR(P)) = getHgt(P) 
					and Engine::getHoles(getEngine(digR(P))) =  Engine::getHoles(getEngine(P)) union Hole( getWdt(P)+1 ,getHgt(P)-1, 0)
					and forall (x,y) in [0;Environment::getWidth(getEnvi(P)[×[0;Environment::getHeight(getEnvi(P)[,  (x!=u or y!=v) 
						implies Environment::getCellNature(getEnvi(P),x,y) = getCellNature(getEnvi(digR(P)),x,y)

[doNeutral] : Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P)) not in [LAD,HDR] 
			and Environment::getCellNature(getEnvi(P),getWdt(P),getHgt(P) - 1) not in [PLT,MTL,LAD]
			and not exists Character c in Environment::getCellContent(getEnvi(P),getWdt(P),getHgt(P)-1)
				implies getWdt(doNeutral(P)) = getWdt(P) and getHgt(doNeutral(P)) = getHgt(P) - 1


[step] :  clone(P) est un clone du Player avant le step, il evolue dans son propre environement et sert a avoir la position theorique du garde si il fait tel ou tel action
	Engine::getNextCommand(getEngine(P)) = LEFT implies getWdt(step(P)) = getWdt(goLeft(clone(P))) and getHgt(step(P)) = getHgt((goLeft(clone(P)))
	Engine::getNextCommand(getEngine(P)) = RIGHT implies getWdt(step(P)) = getWdt(goRight(clone(P))) and getHgt(step(P)) = getHgt((goRight(clone(P)))
	Engine::getNextCommand(getEngine(P)) = UP implies getWdt(step(P)) = getWdt(goUp(clone(P))) and getHgt(step(P)) = getHgt((goUp(clone(P)))
	Engine::getNextCommand(getEngine(P)) = DOWN implies step(P) = implies getWdt(step(P)) = getWdt(goDown(clone(P))) and getHgt(step(P)) = getHgt((goDown(clone(P)))
	Engine::getNextCommand(getEngine(P)) = NEUTRAL implies step(P) = implies getWdt(step(P)) = getWdt(doNeutral(clone(P))) and getHgt(step(P)) = getHgt((doNeutral(clone(P)))
	Engine::getNextCommand(getEngine(P)) = DigL implies step(P) = DigL(clone(P))
	Engine::getNextCommand(getEngine(P)) = DigR implies step(P) = DigR(clone(P))
	
#############################################################################################################################################

Service : Guard
include : Character

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}, SetGharItem {Item + Character}, Move {RIGHT,UP,DOWN,NEUTRAL,LEFT,DigL,DigR}

Observators:

getId : [Guard] -> int
	
getBehaviour : [Guard] -> Move
	
getTarget : [Guard] -> [Player]
	
getTimeInHole : [Guard] -> int

Constructors : 

init : [ScreenService]*int*int*[Player] -> Guard
	pre : init(S,x,y,t) requires Environment::getCellNature(S,x,y) = EMP 

Operators :

step : [Guard] -> [Guard]

ClimbLeft : [Guard] -> [Guard]
	pre : ClimbLeft(G) requires Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) == HOL

ClimbRight : [Guard] -> [Guard]
	pre : ClimbLeft(G) requires Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) == HOL

doNeutral : [Guard] -> [Guard]


Observations :

[Invariants]
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) in [EMP,HOL,LAD,HDR] 
	exists Guard x in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)) implies x = G

[step] : clone(G) est un clone du Guard avant le step, il evolue dans son propre environement et sert a avoir la position theorique du garde si il fait tel ou tel action

	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) = HOL
		and getTimeInHole(G)<5 
			implies getTimeInHole(step(G)) = getTimeInHole(G) + 1 and getWdt(G) = getWdt(step(G)) and getHgt(G) = getHgt(step(G))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) = HOL
		and getTimeInHole(G)>=5 
		and getBehaviour(G) = LEFT
			implies getWdt(step(G)) = getWdt(climbLeft(clone(G))) and getHgt(step(G)) = getHgt((climbLeft(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) = HOL
		and getTimeInHole(G)>=5 
		and getBehaviour(G) = RIGHT 
			implies getWdt(step(G)) = getWdt(climbRight(clone(G))) and getHgt(step(G)) = getHgt((climbRight(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) = HOL
		and getTimeInHole(G)>=5 
		and getBehaviour(G) = NEUTRAL 
			implies getWdt(step(G)) = getWdt(doNeutral(clone(G))) and getHgt(step(G)) = getHgt((doNeutral(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) != HOL
		and getBehaviour(G) = LEFT
			implies getWdt(step(G)) = getWdt(goLeft(clone(G))) and getHgt(step(G)) = getHgt((goLeft(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) != HOL
		and getBehaviour(G) = RIGHT 
			getWdt(step(G)) = getWdt(goRight(clone(G))) and getHgt(step(G)) = getHgt((goRight(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) != HOL
		and getBehaviour(G) = UP
			implies getWdt(step(G)) = getWdt(goUp(clone(G))) and getHgt(step(G)) = getHgt((goUp(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) != HOL
		and getBehaviour(G) = DOWN
			implies getWdt(step(G)) = getWdt(goDown(clone(G))) and getHgt(step(G)) = getHgt((goDown(clone(G)))
	Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) != HOL
		and getBehaviour(G) = NEUTRAL
			implies getWdt(step(G)) = getWdt(doNeutral(clone(G))) and getHgt(step(G)) = getHgt((doNeutral(clone(G)))	


[GlimbLeft] : getWdt(G) > 0 and getHgt(G) < Environment::getHeigth(getEnvi(P)) -1 
		and getTimeInHole(G) >= 5
		and (Environment::getCellNature(getEnvi(G),getWdt(G)-1,getHgt(G)) in [MTL,PLT] 
			or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)-1,getHgt(G)))
		and Environment::getCellNature(getEnvi(G),getWdt(G)-1,getHgt(G)+1) in [EMP,HOL,LAD,HDR]
		and not exist Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)-1,getHgt(G)+1)
			implies getWdt(GlimbLeft(G)) = getWdt(G)-1 and getHgt(GlimbLeft(G)) = getHgt(G)+1 and getTimeInHole() = 0

[GlimbRight] : getWdt(G) < Environment::getWidth(getEnvi(P)) -1 and getHgt(G) < Environment::getHeigth(getEnvi(P))-1
		 and getTimeInHole(G) >= 5
		and (Environment::getCellNature(getEnvi(G),getWdt(G)+1,getHgt(G)) in [MTL,PLT] 
			or Guard G in  Environment::getCellGontent(getEnvi(G),getWdt(G)+1,getHgt(G))
		and Environment::getCellNature(getEnvi(G),getWdt(G)+1,getHgt(G)+1) in [EMP,HOL,LAD,HDR]
		and not exist Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)-1,getHgt(G)+1)
			implies getWdt(GlimbRight(G)) == getWdt(G)+1 and getHgt(GlimbRight(G)) = getHgt(G)+1 and getTimeInHole() == 0

[doNeutral] : Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) not in [LAD,HDR,HOL] 
			and Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G) - 1) not in [PLT,MTL,LAD]
			and not exists Guard G in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1)
				implies getWdt(doNeutral(G)) = getWdt(G) and getHgt(doNeutral(G)) = getHgt(G) - 1
	

[goLeft] : getHgt(G) = 0 implies getHgt(goLeft(G)) = getHgt(G) and getWdt(goLeft(G)) = getWdt(G)
	   getHgt(G) > 0 and (Environment::getCellNature(getEnvi(G),getWdt(G) - 1,getHgt(G)) in [MTL,PLT] 
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)-1,getHgt(G)))
			and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G) - 1) in [MTL,PLT,LAD] 
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1))
				implies getHgt(goLeft(G)) = getHgt(G) and getWdt(goLeft(G)) = getWdt(G)
	   Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) not in [LAD,HDR,HOL]
			and Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) not in [MTL,PLT,LAD] 
			and not exists Guard G in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1)
				implies getHgt(goLeft(G)) = getHgt(G) - 1 and getWdt(goLeft(G)) = getWdt(G)
	   getHgt(G) > 0 and Environment::getCellNature(getEnvi(G),getWdt(G) - 1,getHgt(G)) not in [MTL,PLT] 
			and not exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)-1,getHgt(G))
			and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) in [LAD,HDR] 
				or Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) in [PLT,MTL,LAD]
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1) )
			implies getHgt(goLeft(G)) = getHgt(G) and getWdt(goLeft(G)) = getWdt(G) - 1

[goRight] :getHgt(G) = Environment::getWidth(getEnvi(G)) - 1 implies getHgt(goRight(G)) = getHgt(G) and getWdt(goRight(G)) = getWdt(G)
	   getHgt(G) < Environment::getWidth(getEnvi(G)) - 1 and (Environment::getCellNature(getEnvi(G),getWdt(G) + 1,getHgt(G)) in [MTL,PLT] 
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)+1,getHgt(G)))
			and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G) - 1) in [MTL,PLT,LAD] 
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1))
				implies getHgt(goRight(G)) = getHgt(G) and getWdt(goRight(G)) = getWdt(G)
	   Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) not in [LAD,HDR,HOL]
			and Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) not in [MTL,PLT,LAD] 
			and not exists Guard G in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1)
				implies getHgt(goRight(G)) = getHgt(G) - 1 and getWdt(goRight(G)) = getWdt(G)
	   getHgt(G) < Environment::getWidth(getEnvi(G)) - 1 and Environment::getCellNature(getEnvi(G),getWdt(G) + 1,getHgt(G)) not in [MTL,PLT] 
			and not exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)+1,getHgt(G))
			and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) in [LAD,HDR] 
				or Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) in [PLT,MTL,LAD]
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1) )
			implies getHgt(goRight(G)) = getHgt(G) and getWdt(goRight(G)) = getWdt(G) + 1


[goUp] : getHgt(G) = Environment::getHeight()-1 implies getHgt(goUp(G)) = getHgt(G) and getWdt(goUp(G)) = getWdt(G)
	 getHgt(G) < Environment::getHeight()-1 and (Environment::getCellNature(getEnvi(G), getWdt(G), getHgt(G) + 1) in [MTL,PLT,HDR] 
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)+1))
			and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) in [PLT,MTL,LAD]
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G)+1,getHgt(G)-1)))
				implies getWdt(G) = getWdt(goUp(G)) and getHgt(G) = getHgt(goUp(G))
	 Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) not in [LAD,HDR,HOL]
			and Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) not in [MTL,PLT,LAD] 
			and not exists Guard G in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1)
				implies getHgt(goUp(G)) = getHgt(G) - 1 and getWdt(goUp(G)) = getWdt(G)
	 getHgt(G) < Environment::getHeight()-1 and Environment::getCellNature(getEnvi(G), getWdt(G), getHgt(G)) = LAD
			and Environment::GellNature(getEnvi(G), getWdt(G), getHgt(G) + 1) in [LAD,EMP] 
			and not exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)+1)
				implies getHgt(goUp(G)) = getHgt(G) + 1 and getWdt(goUp(G)) = getWdt(G)


[goDown]: getHgt(G) = 0 implies getHgt(goDown(G))=getHgt(G) and getWdt(goDown(G)) = getWdt(G)
	  getHgt(G) > 0 and (Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) in [PLT,MTL]
				or exists Guard G in  Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1))
				implies getWdt(G) = getWdt(goDown(G)) and getHgt(G) = getHgt(goDown(G))
	  Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)) not in [LAD,HDR,HOL]
			and Environment::getCellNature(getEnvi(G),getWdt(G),getHgt(G)-1) not in [MTL,PLT,LAD] 
			and not exists Guard G in Environment::getCellContent(getEnvi(G),getWdt(G),getHgt(G)-1)
				implies getHgt(goLDown(G)) = getHgt(G) - 1 and getWdt(goDown(G)) = getWdt(G)
	  getHgt(G) > 0 and Environment::getCellNature(getEnvi(G), getWdt(G), getHgt(G)) in [LAD,HDR,EMP]
			and Environment::getCellNature(getEnvi(G), getWdt(G), getHgt(G)-1) in [EMP,LAD,HDR,HOL]
			and not exists Guard G in Environment::getCellContent(getEnvi(G), getWdt(G), getHgt(G)-1))
				implies getHgt(goDown(G))=getHgt(G)-1 and getWdt(goDown(G)) = getWdt(G)

#############################################################################################################################################

Service : Engine

Type : Cell {EMP,PLT,HOL,LAD,HDR,MT}, SetGharItem {Item + Character}, Move {RIGHT,UP,DOWN,NEUTRAL,LEFT,DigL,DigR}, Hole {X + Y + Time},
	 Status {Playing, Loss, Win}, Pos {X + Y}, Item {Treasure}, InitPos { Id + X + Y }

Observators :

getNbLives : [Engine] -> int
	
getScore : [Engine] -> int
	
getEnvironment : [Engine] -> [Environment]
	
getPlayer : [Engine] -> [Player]
	
getGuards : [Engine] -> { [Guard] }
	
getTreasures : [Engine] -> { Item } 
	
getStatus : [Engine] -> Status
	
getNextCommand : [Engine] -> Move
	
getHoles : [Engine] -> { Hole }
	
guardInitPos : [Engine] -> { InitPos }

Constructors :

init : [EditableScrenn]*Pos*{Pos}*{Pos} 
	pre : init(ES,posChar,posGuards,posItems) requires EditableScreen::isPlayable(ES) = True 
		and posItems != {}
		and (getCellNature(ES,posChar.x,posChar.y) = EMP and (posChar::x, posChar::y) in [0;getWidth(ES)[×[0;getHeight(ES)[ )
		and forall p:Pos in posGuards 
			EditableScreen::getCellNature(ES,p::x,p::y) = EMP) and (p::x != posChar::x or p::y != posChar::y) and (p::x, p::y) in [0;getWidth(ES)[×[0;getHeight(ES)[
		and forall p:Pos in posItems 
			EditableScreen::getCellNature(ES,p::x,p::y) = EMP) and (p::x != posChar::x or p::y != posChar::y) and forall pG:Pos in posGuards p::x!= pG::x or p::y != pG::y
			and (p::x, p::y) in [0;getWidth(ES)[×[0;getHeight(ES)[
			and EditableScreen::getCellNature(ES,p::x,p::y-1) = [PLT,MTL]
	

Operators :

setNbLives : [Engine]*int -> [Engine]

setCommand : [Engine]*Move -> [Engine]

step : [Engine] -> [Engine]

Observations:

[Invariants] :  getPlayer(E) in Environment::getCellContent(getEnvironment(E),Player::getWdt(getPlayer(E)),Player::getHgt(getPlayer(E)))
		forall G:Guard in getGuards(E) 
			G in Environment::getCellContent(getEnvironment(E),Guard::getWdt(G),Guard::getHgt(G))
		forall T:Item in getTreasures(E) 
			T in Environment::getCellContent(getEnvironment(E),T::getWdt, T::getHgt)
		forall H:Hole in getHoles()
			Environment::getCellNature(getEnvironment(E),H.x,H.y) = HOL
		getTreasures(E) = {} implies getStatus(E) = Win
		getNbLives(E) < 0 implies getStatus(E) == Loss

[setNbLives] : getNbLives(setNbLives(E,x)) = x

[setCommand] : getNextCommand(setCommand(E,c)) = c

[init] : getPlayer(init(ES,posChar,posGuards,posItems)) in Environment::getCellContent(getEnvironment(init(ES,posChar,posGuards,posItems)),posChar.x,posChar.y) 
		and forall (x, y) in [0;getWidth(ES)[×[0;getHeight(ES)[ and (x!= posChar.x and y!= posChar.y)
			implies getPlayer(init(ES,posChar,posGuards,posItems)) not in Environment::getCellContent(getEnvironment(init(ES,posChar,posGuards,posItems)),x,y)4
	 forall p:Pos in posGuards 
		exist G:Guard in Environment::getCellContent(getEnvironment(init(ES,posChar,posGuards,posItems)),p::x,p::y)
	 and forall p:Pos in posItems 
		exist Item i in Environment::getCellContent(getEnvironment(init(ES,posChar,posGuards,posItems)),p::x,p::y)	
	 getStatus(init(ES,posChar,posGuards,posItems)) = Playig
	 getNbLives(init(ES,posChar,posGuards,posItems)) = 2
	 getScore(init(ES,posChar,posGuards,posItems)) = 0
	 Player::getEngine(getPlayer(init(ES,posChar,posGuards,posItems))) = init(ES,posChar,posGuards,posItems)
	 forall p:InitPos in guardInitPos(init(ES,posChar,posGuards,posItems))
		 exist G:Guard in getGuards(init(ES,posChar,posGuards,posItems)) with G::id = p::Id and Guard::getWdt(G) = p::X and Guard::getHgt(G) = p::Y

[step] : getPlayer(step(E)) = Player::step(getPlayer(E))
	 forall G:Guard in getGuards(step(E)) and G2 in getGuards(E)
		G::id = G2::id implie G = Guard::step(G2)
	 forall T:Item in getTreasures(E)
		 T in Environment::getCellContent(getEnvironment(step(E)),Player::getWdt(getPlayer(step(E))),Player::getHgt(getPlayer(step(E))))
			implies T not in getTreasures(step(E)) and getScore(step(E)) = getScore(E) + 1
	 forall G:Guard in getGuards(step(E)) 
		 G in Environment::getCellContent(getEnvironment(step(E)),Player::getWdt(getPlayer(step(E))),Player::getHgt(getPlayer(step(E))))
			implies  getNbLives(step(E)) = getNbLives(E) - 1
	 forall G:Guard in getGuards(E)
		 exists t:Item in Environment::getCellContent(getEnvironment(G),Guard::getWdt(G),Guard::getHgt(G)) 
				and forall G2:Guard in getGuards(step(E))
					G2::id = G::id and (Environment::getCellNature(getEnvironment(step(E)),Guard::getWdt(G2),Guard::getHgt(G2)) = EMP 
						and (Environment::getCellNature(getEnvironment(step(E)),Guard::getWdt(G2),Guard::getHgt(G2)-1) in [MTL, PLT]
						 	or exist Character c in Environment::getCellContent(getEnvironment(step(E)),Guard::getWdt(G),Guard::getHgt(G2)-1) ) )
				implies t in EnvironmentService::getCellContent(getEnvironment(step(E)),Guard::getWdt(G),Guard::getHgt(G))
	 forall H:Hole in getHoles(E)
		H::time < 14 implies H in getHoles(step(E)) and H::time+1 = getHoles(step(E))::get(H)::time
		H::time = 14 and Player p in Environment::getCellContent(getEnvironment(step(E)),H::x,H::y)
			implies getNbLives(step(E)) = getNbLives(E) - 1
		H.time = 14 implies getHoles(step(E)) = getHoles(E) minus H
		H.time = 14 and for G:Guard in getGuard(E) G in EnvironmentService::getCellContent(getEnvironment(E),H.x,H.y)
			implies not exist Guard c in EnvironmentService::getCellContent(getEnvironment(E),H.x,H.y) 
				and Guard::getHdt(G) = guardInitPos(E)::get(G)::x and  Guard::getWdt(G) = guardInitPos()::get(G)::y
